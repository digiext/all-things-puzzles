openapi: 3.1.0
info:
  title: All Things Puzzles
  description: OpenAPI Specification for the All Things Puzzles API
  version: 1.0.0
servers:
  - url: http://localhost/api/
    description: Localhost
paths:
  /checkauth:
    get:
      security:
        - basicAuth: []
      description: Check authentication status and permissions
      responses:
        200:
          description: Authenticated
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          permissions:
                            type: object
                            description: A list of all defined permissions and whether the token used to authenticate has them
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
  /brands:
    get:
      security:
        - basicAuth: []
      description: Get all brands
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Brand
                          allOf:
                            - $ref: '#/components/schemas/Brand'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/brand/28/"
                        example:
                          - id: 28
                            name: MasterPieces
                            link: "http://localhost/api/brand/28/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /brand/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a brand by it's ID
      parameters:
        - name: id
          in: path
          description: The brand ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Brand'
                        example:
                          id: 28
                          name: "MasterPieces"
        404:
          description: Brand not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /categories:
    get:
      security:
        - basicAuth: [ ]
      description: Get all categories
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Category
                          allOf:
                            - $ref: '#/components/schemas/Category'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/category/1/"
                        example:
                          - id: 1
                            name: "Nature"
                            link: "http://localhost/api/category/1/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /category/{id}/:
    get:
      security:
        - basicAuth: [ ]
      description: Get a category by it's ID
      parameters:
        - name: id
          in: path
          description: The category ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Category'
                        example:
                          id: 1
                          name: 'Nature'
        404:
          description: Category not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /dispositions:
    get:
      security:
        - basicAuth: []
      description: Get all dispositions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Disposition
                          allOf:
                            - $ref: '#/components/schemas/Disposition'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/disposition/1/"
                        example:
                          - id: 1
                            name: "Keep"
                            link: "http://localhost/api/disposition/1/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /disposition/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a disposition by it's ID
      parameters:
        - name: id
          in: path
          description: The disposition ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Disposition'
                        example:
                          id: 1
                          name: "Keep"
        404:
          description: Disposition not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /locations:
    get:
      security:
        - basicAuth: []
      description: Get all locations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Location
                          allOf:
                            - $ref: '#/components/schemas/Location'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/location/28/"
                        example:
                          - id: 1
                            name: "Puzzle Warehouse"
                            link: "http://localhost/api/location/28/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /location/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a location by it's ID
      parameters:
        - name: id
          in: path
          description: The location ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Location'
                        example:
                          id: 1
                          name: "Puzzle Warehouse"
        404:
          description: Location not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /ownerships:
    get:
      security:
        - basicAuth: []
      description: Get all ownerships
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Ownership
                          allOf:
                            - $ref: '#/components/schemas/Ownership'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/ownership/1/"
                        example:
                          - id: 1
                            name: "Owned"
                            link: "http://localhost/api/ownership/1/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /ownership/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get an ownership by it's ID
      parameters:
        - name: id
          in: path
          description: The ownership ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Ownership'
                        example:
                          id: 28
                          name: "MasterPieces"
        404:
          description: Ownership not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /puzzles:
    get:
      security:
        - basicAuth: []
      description: Get all puzzles
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Puzzle
                          allOf:
                            - $ref: '#/components/schemas/Puzzle'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/puzzle/3/"
                        example:
                          - id: 3
                            name: "Well Stocked Shelves"
                            pieces: 1000
                            brand:
                              id: 28
                              name: "MasterPieces"
                            cost: 24.99
                            source:
                              id: 5
                              description: "New Purchase"
                            location:
                              id: 11
                              description: "5 and 10 General Store"
                            disposition:
                              id: 1
                              description: "Keep"
                            pictureurl: "Well_Stocked_Shelves_3.jpg"
                            upc: "705988719370"
                            link: "http://localhost/api/puzzle/3/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /puzzle/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a puzzle by it's ID
      parameters:
        - name: id
          in: path
          description: The puzzle ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Puzzle'
        404:
          description: Puzzle not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /sources:
    get:
      security:
        - basicAuth: []
      description: Get all sources
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Source
                          allOf:
                            - $ref: '#/components/schemas/Source'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/source/1/"
                        example:
                          - id: 1
                            name: "New Purchase"
                            link: "http://localhost/api/source/1/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /source/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a source by it's ID
      parameters:
        - name: id
          in: path
          description: The source ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Source'
                        example:
                          id: 1
                          name: "New Purchase"
        404:
          description: Source not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /statuses:
    get:
      security:
        - basicAuth: []
      description: Get all statuses
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          format: Status
                          allOf:
                            - $ref: '#/components/schemas/Status'
                            - type: object
                              properties:
                                link:
                                  type: string
                                  example: "http://localhost/api/status/1/"
                        example:
                          - id: 1
                            name: "To Do"
                            link: "http://localhost/api/status/1/"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /status/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a status by it's ID
      parameters:
        - name: id
          in: path
          description: The status ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Status'
                        example:
                          id: 1
                          name: "To Do"
        404:
          description: Status not found!
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /users:
    get:
      security:
        - basicAuth: []
      description: Get all users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserMin'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
  /user/{id}/:
    get:
      security:
        - basicAuth: []
      description: Get a user by their user ID
      parameters:
        - name: id
          in: path
          description: The user ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        oneOf:
                          - $ref: '#/components/schemas/UserMin'
                          - $ref: '#/components/schemas/UserFull'
                        example:
                          id: 10
                          username: "example"
                          display_name: "Example Exampleton"
                          last_login: "2025-01-01 12:00:00"
        404:
          description: Not Found
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/Unauthorized'
        405:
          description: Wrong Method
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
                      error:
                        $ref: '#/components/schemas/WrongMethod'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    Error:
      type: object
      additionalProperties: true
      properties:
        error_code:
          type: string
        message:
          type: string
    WrongMethod:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error_code:
              type: string
              example: "wrong_method"
            message:
              type: string
              example: "Method not allowed"
            accepted_methods:
              type: array
              items:
                type: string
              example:
                - "GET"
          example:
            error_code: "wrong_method"
            message: "Method not allowed"
            accepted_methods:
              - "GET"
      additionalProperties: false
    Unauthorized:
      $ref: '#/components/schemas/Error'
      properties:
        error_code:
          type: string
          example: "unauthorized"
        message:
          type: string
          example: "You need correct authorization to interact with this endpoint!"
      additionalProperties: false
      example:
        error_code: "unauthorized"
        message: "You need correct authorization to interact with this endpoint!"
    Response:
      type: object
      properties:
        server_version:
          type: string
          example: "1.1.0"
        api_version:
          type: integer
          example: 1
        error:
          $ref: '#/components/schemas/Error'
          example: null
          nullable: true
        has_error:
          type: boolean
          example: false
        data:
          type: object
          additionalProperties: true
          nullable: true
          example: {}
    Brand:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 28
        name:
          type: string
          example: "MasterPieces"
      required:
        - id
        - name
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "Nature"
      required:
        - id
        - description
    Disposition:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "Keep"
      required:
        - id
        - description
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "Puzzle Warehouse"
      required:
        - id
        - description
    Ownership:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "Owned"
      required:
        - id
        - description
    Puzzle:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: "Well Stocked Shelves"
        pieces:
          type: integer
          example: 1000
        brand:
          $ref: '#/components/schemas/Brand'
        cost:
          type: float
          example: 24.99
        source:
          $ref: '#/components/schemas/Source'
        location:
          $ref: '#/components/schemas/Location'
        disposition:
          $ref: '#/components/schemas/Disposition'
        pictureurl:
          type: string
          example: "Well_Stocked_Shelves_3.jpg"
        upc:
          type: string
          example: "705988719370"
      required:
        - id
        - name
        - pieces
      example:
        id: 3
        name: "Well Stocked Shelves"
        pieces: 1000
        brand:
          id: 28
          name: "MasterPieces"
        cost: 24.99
        source:
          id: 5
          description: "New Purchase"
        location:
          id: 11
          description: "5 and 10 General Store"
        disposition:
          id: 1
          description: "Keep"
        pictureurl: "Well_Stocked_Shelves_3.jpg"
        upc: "705988719370"
    Source:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "New Purchase"
      required:
        - id
        - description
    Status:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "To Do"
        pieces:
          type: integer
      required:
        - id
        - description
    UserMin:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: "example"
        display_name:
          type: string
          example: "Example Exampleton"
        last_login:
          type: string
          example: "2025-01-01 12:00:00"
      required:
        - id
        - username
      example:
        id: 10
        username: "example"
        display_name: "Example Exampleton"
        last_login: "2025-01-01 12:00:00"
    UserFull:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: "example"
        display_name:
          type: string
          example: "Example Exampleton"
        email:
          type: string
          example: "example@example.org"
        email_confirmed:
          type: boolean
          example: false
        group:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: "Member"
        theme:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "dark"
        last_login:
          type: string
          example: "2025-01-01 12:00:00"
      required:
        - id
        - username
      example:
        id: 10
        username: "example"
        display_name: "Example Exampleton"
        email: "example@example.org"
        email_confirmed: false
        group:
          id: 2
          name: "Member"
        theme:
          id: 1
          name: "dark"
        last_login: "2025-01-01 12:00:00"